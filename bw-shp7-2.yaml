# SN 2921
# Usage: Salon Lampara
substitutions:
  current_res: "0.00131"
  device_name: bw-shp7-2
  logger_baud_rate: "0"
  max_power: "3680"
  voltage_div: "945.7"
  wifi_output_power: "20"
  wifi_priority: "0.0"
  wifi_priority_aux: "0.0"
  wifi_signal_max: "-40.0"

esphome:
  name: ${device_name}
  platformio_options:
    board_build.f_cpu: 80000000L
  on_boot:
    priority: -100
    then:
      - if:
          condition:
            switch.is_off: relay1
          then:
            output.turn_on: led1
      - if:
          condition:
            switch.is_off: relay2
          then:
            output.turn_on: led2

esp8266:
  board: esp8285
  restore_from_flash: true

packages:
  common: !include .common.yaml

### Config ###

binary_sensor:
  - platform: gpio
    id: button1
    internal: true
    pin:
      number: GPIO0
      mode:
        input: true
        pullup: true
      inverted: true
    on_press:
      - switch.toggle: relay1

  - platform: gpio
    id: button2
    internal: true
    pin:
      number: GPIO12
      mode:
        input: true
        pullup: true
      inverted: true
    on_press:
      - switch.toggle: relay2

  - platform: gpio
    pin: GPIO15
    id: gpio15_irq
    internal: true

output:
   - platform: gpio
     id: led1
     pin:
       number: GPIO13
       inverted: true
   - platform: gpio
     id: led2
     pin:
       number: GPIO2
       inverted: true

sensor:
  - platform: hlw8012
    sel_pin:
      number: GPIO3
      inverted: true
    cf_pin: GPIO4
    cf1_pin: GPIO5
    current_resistor: ${current_res}
    voltage_divider: ${voltage_div}
    voltage:
      id: hlw8012_voltage
      name: "${device_name} Voltage"
      unit_of_measurement: "V"
      icon: mdi:sine-wave
    power:
      id: hlw8012_power
      name: "${device_name} Power"
      unit_of_measurement: "W"
      icon: mdi:flash-outline
      on_value:
        - sensor.template.publish:
            id: hlw8012_current
            state: !lambda |-
              if (isnan(id(hlw8012_power).state) || isnan(id(hlw8012_voltage).state)) {
                return {};
              } else if (id(hlw8012_voltage).state > 0) {
                return id(hlw8012_power).state / id(hlw8012_voltage).state;
              } else {
                return {};
              }
      on_value_range:
        - above: ${max_power}
          then:
            - switch.turn_off: relay1
            - switch.turn_off: relay2
            - output.turn_on: led1
            - output.turn_on: led2
            - homeassistant.service:
                service: persistent_notification.create
                data:
                  title: Message from ${device_name}
                data_template:
                  message: Switch turned off because power exceeded ${max_power}W
    energy:
      id: hlw8012_energy
      name: "${device_name} Energy"
      unit_of_measurement: "Wh"
      icon: mdi:lightning-bolt
    change_mode_every: 4294967295
    update_interval: 10s

  - platform: template
    id: hlw8012_current
    name: "${device_name} Current"
    unit_of_measurement: "A"
    icon: mdi:flash-outline
    accuracy_decimals: 3
    update_interval: never

status_led:
  pin:
    number: GPIO1
    inverted: true

switch:
  - platform: gpio
    pin: GPIO16
    restore_mode: RESTORE_DEFAULT_OFF
    id: relay1
    name: "${device_name} Relay 1"
    on_turn_on:
      then:
        - output.turn_off: led1
    on_turn_off:
      then:
        - output.turn_on: led1

  - platform: gpio
    pin: GPIO14
    restore_mode: RESTORE_DEFAULT_OFF
    id: relay2
    name: "${device_name} Relay 2"
    on_turn_on:
      then:
        - output.turn_off: led2
    on_turn_off:
      then:
        - output.turn_on: led2
