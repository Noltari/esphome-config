substitutions:
  device_name: esp32-c3-mini
  logger_baud_rate: "0"
  pulse_gas_conv: "0.005"
  wifi_output_power: "17"
  wifi_priority: "0.0"
  wifi_priority_aux: "0.0"
  wifi_signal_max: "-5.0"

esphome:
  name: ${device_name}

esp32:
  board: lolin_c3_mini
  variant: esp32c3

external_components:
  - source: github://Noltari/esphome-components@master
    components: [ lora_pulse_counter ]

packages:
  common: !include .common.yaml

### Config ###

binary_sensor:
  - platform: lora_pulse_counter
    lpc_id: lpc
    voltage_low:
      name: "${device_name} Low Battery"

i2c:
  sda: GPIO4
  scl: GPIO5
  scan: false

fan:
- platform: speed
  name: "${device_name} Fan"
  id: fan_gpio1
  output: ledc_gpio1
  on_turn_on:
    lambda: |-
      auto speed = id(fan_gpio1).speed;

      auto call = id(fan_gpio1).turn_on();
      call.set_speed(100);
      call.perform();

      delay(1000);

      call.set_speed(speed);
      call.perform();

light:
  - platform: neopixelbus
    name: "${device_name} Status LED"
    id: status_led_rgb
    type: GRB
    variant: WS2812X
    pin: GPIO7
    num_leds: 1

lora_pulse_counter:
  id: lpc
  lora_rst: 6
  lora_ss: 8

output:
  - platform: ledc
    pin: GPIO1
    id: ledc_gpio1
    frequency: 128 Hz
    min_power: 33%
    max_power: 100%
    zero_means_zero: True

sensor:
  - platform: internal_temperature
    name: "${device_name} SoC Temperature"
    update_interval: 60s

  - platform: pulse_counter
    name: "${device_name} Fan Speed"
    id: fan_speed
    pin: 
      number: GPIO0
      mode: INPUT_PULLUP
    unit_of_measurement: 'RPM'
    update_interval: 30s
    filters:
      - multiply: 0.5

  - platform: bme280_i2c
    update_interval: 60s
    address: 0x76
    temperature:
      name: "${device_name} Temperature"
      oversampling: 16x
    pressure:
      name: "${device_name} Pressure"
    humidity:
      name: "${device_name} Humidity"

  - platform: lora_pulse_counter
    lpc_id: lpc
    pulses:
      id: lora_sx1276_pulses
      name: "${device_name} Pulses"
      on_raw_value:
        then:
          - sensor.template.publish:
              id: lora_sx1276_gas_meter
              state: !lambda |-
                return id(lora_sx1276_pulses).raw_state * ${pulse_gas_conv};
    voltage:
      name: "${device_name} Cell Voltage"
    temperature:
      name: "${device_name} ATTiny84 Temperature"
    rssi:
      name: "${device_name} LoRa RSSI"
    snr:
      name: "${device_name} LoRa SNR"

  - platform: template
    name: "${device_name} Gas Meter"
    id: lora_sx1276_gas_meter
    icon: mdi:meter-gas-outline
    unit_of_measurement: "mÂ³"
    device_class: gas
    state_class: total_increasing
    accuracy_decimals: 2
    update_interval: never

spi:
  clk_pin: GPIO10
  mosi_pin: GPIO3
  miso_pin: GPIO2
